import d from"deepmerge";import{JSONPath as A}from"jsonpath-plus";var M={objectMergeMode:"overwrite",arrayMergeMode:"replace"},j=(e,a)=>[...Array(a-e)].map((n,t)=>e+t),m=(e,a)=>a,x=(e,a)=>e;function h(e){return e.startsWith("`")?e.substring(1):e}function V(e){return e.startsWith("$.")}function O(e){return!!e&&typeof e=="object"&&"@path"in e&&typeof e["@path"]=="string"}function I(e){return!!e&&typeof e=="object"&&"@element"in e&&!!e["@element"]&&typeof e["@element"]=="object"}function S(e,a,n,t){let r=n;if(O(n)){if(r=S(e,a,n["@path"],t),n["@default"]!==void 0&&(r=r!=null?r:f(e,a,n["@default"],t)),n["@transform"]){let i={source:e,schema:n["@path"]};r=n["@transform"](r,a,i)}}else if(typeof n=="string")if(V(n)){let i=!0,c=n;n.endsWith("[]")&&(c=n.substring(0,n.length-2),i=!1);let l=A({path:c,json:e});i&&Array.isArray(l)&&l.length<=1?r=l[0]:r=l}else r=h(n);return r}function w(e,a,n,t){let r=a;(!r||typeof r!="object")&&(r={});let i=Object.fromEntries(Object.entries(n).map(([b,y])=>{let u=h(b);return[u,f(e,r[u],y,t)]})),c;switch(t.arrayMergeMode){case"replace":c=m;break;case"append":case"prepend":switch(t.objectMergeMode){case"overwrite":c=m;break;case"preserve":c=x;break}break}let l=r;switch(t.objectMergeMode){case"overwrite":l=d(r,i,{arrayMerge:c});break;case"preserve":l=d(i,r,{arrayMerge:c});break;case"replace":l=i;break}return l}function k(e,a,n,t){let r=a;Array.isArray(a)||(r=[]);let i=n.flatMap((l,b)=>{if(I(l)){let y={};for(let[o,p]of Object.entries(l["@element"])){let s=p==null?void 0:p["@padding"],J=f(e,r[b],p,t);y[o]=[J,s]}let u=Math.max(...Object.values(y).map(([o])=>Array.isArray(o)?o.length:1));if(l["@length"]){let o=f(e,null,l["@length"],t);Number.isInteger(o)&&(u=o),Array.isArray(o)&&(u=o.length)}return j(0,u).map(o=>Object.fromEntries(Object.entries(y).map(([p,[s,J]])=>{var g;if(Array.isArray(s))switch(J!=null?J:"empty"){case"empty":return[p,s[o]];case"edge":return[p,(g=s[o])!=null?g:s.at(-1)];case"reflect":return[p,s[(o/s.length|0)%2===0?o%s.length:s.length-1-o%s.length]];case"wrap":return[p,s[o%s.length]]}switch(J!=null?J:"edge"){case"empty":return[p,o===0?s:void 0];default:return[p,s]}}).filter(([p,s])=>s!==void 0)))}return[f(e,r[b],l,t)]}),c=r;switch(t.arrayMergeMode){case"replace":c=i;break;case"append":c=[...r,...i];break;case"prepend":c=[...i,...r];break}return c}function f(e,a,n,t){return Array.isArray(n)?k(e,a,n,t):n!=null&&typeof n=="object"&&!O(n)?w(e,a,n,t):S(e,a,n,t)}function P(e,a,n=null,t){let r=Object.assign({},M,t!=null?t:{});return f(e,n,a,r)}export{P as map};
