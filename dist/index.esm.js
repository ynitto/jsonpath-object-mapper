import b from"deepmerge";import j from"jsonpath";var O={objectMergeMode:"overwrite",arrayMergeMode:"replace"},x=(e,a)=>a,V=(e,a)=>new Array().concat(a).concat(e),m=(e,a)=>e.concat(a);function M(e){return e.startsWith("`")?e.substring(1):e}function w(e){return e.startsWith("$.")}function h(e){return!!e&&typeof e=="object"&&"@path"in e&&typeof(e==null?void 0:e["@path"])=="string"}function N(e){return!!e&&typeof e=="object"&&"@yield"in e&&!!(e!=null&&e["@yield"])}function S(e,a,n,o){let r=n;if(h(n)){if(r=S(e,a,n["@path"],o),n["@transform"]){let i={source:e,schema:n["@path"]};r=n["@transform"](r,a,i)}r===void 0&&n["@default"]!==void 0&&(r=r!=null?r:u(e,a,n["@default"],o))}else if(typeof n=="string")if(w(n)){let i=!0,J=n;n.endsWith("[]")&&(J=n.substring(0,n.length-2),i=!1);let c=j.query(e,J);i&&Array.isArray(c)&&c.length<=1?r=c[0]:r=c}else r=M(n);return r}function k(e,a,n,o){let r=a;(!r||typeof r!="object")&&(r={});let i=Object.fromEntries(Object.entries(n).map(([g,y])=>{let d=M(g);return[d,u(e,r[d],y,o)]})),J;switch(o.arrayMergeMode){case"replace":J=x;break;case"concat":J=o.objectMergeMode==="overwrite"?m:V;break}let c=r;switch(o.objectMergeMode){case"overwrite":c=b(r!=null?r:{},i,{arrayMerge:J});break;case"preserve":c=b(i,r!=null?r:{},{arrayMerge:J});break;case"replace":c=i;break}return c}function v(e,a,n,o){let r=a;Array.isArray(a)||(r=[]);let i=n.flatMap((c,g)=>{if(N(c)){let y={};for(let l of c["@yield"])for(let[s,t]of Object.entries(l)){let p=t==null?void 0:t["@padding"],f=u(e,r[g],t,o);if(y[s]){let A=[];A.push(...Array.isArray(y[s][0])?y[s][0]:[y[s][0]],...Array.isArray(f)?f:[f]),y[s]=[A,p!=null?p:y[s][1]]}else y[s]=[f,p]}let d=Math.max(...Object.values(y).map(([l])=>Array.isArray(l)?l.length:1));if(c["@length"]){let l=u(e,null,c["@length"],o);Number.isInteger(l)&&(d=l)}return[...new Array(d).keys()].map(l=>Object.fromEntries(Object.entries(y).map(([s,[t,p]])=>{var f;if(Array.isArray(t))switch(p!=null?p:"empty"){case"empty":return[s,t[l]];case"edge":return[s,(f=t[l])!=null?f:t.at(-1)];case"reflect":return[s,t[(l/t.length|0)%2===0?l%t.length:(t.length-l-1)%t.length]];case"wrap":return[s,t[l%t.length]]}switch(p!=null?p:"edge"){case"empty":return[s,l===0?t:void 0];case"edge":return[s,t];case"reflect":return[s,t];case"wrap":return[s,t]}}).filter(([s,t])=>t!==void 0)))}return[u(e,r[g],c,o)]}),J=r;switch(o.arrayMergeMode){case"replace":J=i;break;case"concat":J=[...r,...i];break;case"combine":J=b(r,i);break}return J}function u(e,a,n,o){return Array.isArray(n)?v(e,a,n,o):typeof n=="object"&&!h(n)?k(e,a,n,o):S(e,a,n,o)}function P(e,a,n,o=null){let r=Object.assign(O,n!=null?n:{});return u(e,o,a,r)}export{P as map};
